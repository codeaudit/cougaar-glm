/*
 * <copyright>
 *  Copyright 1997-2000 Defense Advanced Research Projects
 *  Agency (DARPA) and ALPINE (a BBNT Solutions (BBN) and
 *  Raytheon Systems Company (RSC) Consortium).
 *  This software to be used only in accordance with the
 *  COUGAAR licence agreement.
 * </copyright>
 */

package org.cougaar.lib.gss;

import org.cougaar.domain.planning.ldm.plan.Task;

import java.util.ArrayList;
import java.util.List;

/**
 * Selects which tasks to try to schedule
 *
 */

public class GSTaskFilter implements GSParent {

  static final int INTERNAL = 0;
  static final int EXTERNAL = 1;
  static final int EITHER = 2;

  /**
   * @param verb expected verb for task
   * @param generating whehter generated by same cluster, other cluster,
            or either
   */
  public GSTaskFilter (String verb, String generating) {
    this.verb = verb;
    if (generating.equals ("internal"))
      generatingCluster = INTERNAL;
    else if (generating.equals ("external"))
      generatingCluster = EXTERNAL;
    else if (! generating.equals ("either"))
      System.out.println
        ("Warning: generatingCluster not specified for task filter");
  }

  public void addChild (Object obj) {
    if (obj instanceof GSBoolean) {
      boolExpr = (GSBoolean) obj;
    }
    else 
      System.out.println (this.getClass () + 
			  ".addChild : Not expecting child of type"+obj.getClass());
  }

  boolean passesFilter (Task task, String clusterAddress) {
    boolean result = (((verb == null) ||
             (task.getVerb().equals (verb))) &&
            ((generatingCluster == EITHER) ||
             ((generatingCluster == INTERNAL) ==
              (clusterAddress.equals (task.getSource().getAddress())))));

    /*
    System.out.println ("GSTaskFilter - found " + task.getUID () +
			" - task's verb " + task.getVerb () + " vs filter verb " + verb + " - " +
			((result) ? " interesting " : " NOT interesting."));
    */

    if (boolExpr != null) {
      List args = new ArrayList ();
      args.add (task);
      boolean exprResult = boolExpr.eval (args);

      /*
      if (exprResult)
	System.out.println ("" + task.getUID ()  + " does not have prep");
      else
	System.out.println ("" + task.getUID ()  + " does have prep");
      */

      return result && exprResult;
    }
    return result;
  }

  private String verb;
  private int generatingCluster = EITHER;
  private GSBoolean boolExpr = null;
}

/*
 * <copyright>
 *  Copyright 1997-2001 BBNT Solutions, LLC
 *  under sponsorship of the Defense Advanced Research Projects Agency (DARPA).
 * 
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the Cougaar Open Source License as published by
 *  DARPA on the Cougaar Open Source Website (www.cougaar.org).
 * 
 *  THE COUGAAR SOFTWARE AND ANY DERIVATIVE SUPPLIED BY LICENSOR IS
 *  PROVIDED 'AS IS' WITHOUT WARRANTIES OF ANY KIND, WHETHER EXPRESS OR
 *  IMPLIED, INCLUDING (BUT NOT LIMITED TO) ALL IMPLIED WARRANTIES OF
 *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, AND WITHOUT
 *  ANY WARRANTIES AS TO NON-INFRINGEMENT.  IN NO EVENT SHALL COPYRIGHT
 *  HOLDER BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL
 *  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE OF DATA OR PROFITS,
 *  TORTIOUS CONDUCT, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 *  PERFORMANCE OF THE COUGAAR SOFTWARE.
 * </copyright>
 */

package org.cougaar.lib.gss;

import org.cougaar.domain.planning.ldm.plan.Task;

import java.util.ArrayList;
import java.util.List;

/**
 * Selects which tasks to try to schedule
 *
 */

public class GSTaskFilter implements GSParent {

  static final int INTERNAL = 0;
  static final int EXTERNAL = 1;
  static final int EITHER = 2;

  /**
   * @param verb expected verb for task
   * @param generating whehter generated by same cluster, other cluster,
            or either
   */
  public GSTaskFilter (String verb, String generating) {
    this.verb = verb;
    if (generating.equals ("internal"))
      generatingCluster = INTERNAL;
    else if (generating.equals ("external"))
      generatingCluster = EXTERNAL;
    else if (! generating.equals ("either"))
      System.out.println
        ("Warning: generatingCluster not specified for task filter");
  }

  public void addChild (Object obj) {
    if (obj instanceof GSBoolean) {
      boolExpr = (GSBoolean) obj;
    }
    else 
      System.out.println (this.getClass () + 
			  ".addChild : Not expecting child of type"+obj.getClass());
  }

  boolean passesFilter (Task task, String clusterAddress) {
    boolean result = (((verb == null) ||
             (task.getVerb().equals (verb))) &&
            ((generatingCluster == EITHER) ||
             ((generatingCluster == INTERNAL) ==
              (clusterAddress.equals (task.getSource().getAddress())))));

    if (boolExpr != null) {
      List args = new ArrayList ();
      args.add (task);
      boolean exprResult = boolExpr.eval (args);

      return result && exprResult;
    }
    return result;
  }

  private String verb;
  private int generatingCluster = EITHER;
  private GSBoolean boolExpr = null;
}

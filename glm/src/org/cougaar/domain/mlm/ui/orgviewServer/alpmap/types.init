/*  Shape functions

The Shape facility allows you to have more control over the shape of an object
than using the builtin rectangle, oval, hexagon etc.  You can include more than
one shape, can specify angles for arcs, displacements from the object center,
and can control shadowing, color, etc.


Filled shapes

  (FPOLY shape  x1 y1  x2 y2  x3 y3  .. )
    filled polygon, up to twenty points
    all points are relative, starting with the center.
    shape= complex, convex, or nonconvex
      use complex if in doubt.
      convex and nonconvex can enable certain X-server optimizations.

  (FRECT dx dy  width height)
    filled rectangle

  (FARC  dx dy  width height  a1 a2)
    filled arc from angle a1 to a2
       default height=width  (circle)
       default angles are 0 and 360 degress


Drawn shapes

  (DLINES   x1 y1  x2 y2  x3 y3  .. )
    draw connected lines, up to twenty points

  (DRECT dx dy  width height)
    draw rectangle

  (DARC  dx dy  width height  a1 a2)
    draw arc from angle a1 to a2
       default height=width  (circle)
       default angles are 0 and 360 degress


Other

  (TYPE type dx dy)
     draw object-type type     mostly for pixmap background

  (LTEXT dx dy  n string)
  (CTEXT dx dy  n string)
  (RTEXT dx dy  n string)
     text of type n at dx, dy;  for present, n=0
       where dx, dy specifies left, center, or right
    

  (LINEWIDTH n)
    set line width for drawn lines

  (SHADOW x)
    x=0  shadow off;  x=1  shadow on (default)  

  (COLOR n)
    set color 
      -1 = attribute color  (default)
       -2 to -5 = extended attribute 2-5 color  (set with objecte)
       0 = background   (erase)
       1-8 =  NetMap color 1-8
       101-110 = extended color 101-110

  (DEFEACOLOR n)
     set default color for extended atr 2-5 when atr value is 0
      -1 = attribute color  (default)
       0 = background color
       1-8 =  NetMap color 1-8

  (LABELCENTER dx dy)
     set offset for label center


  You may have any number of shape functions in your list;  they will be
displayed (or take effect) in the order specified.

  dx and dy are x and y displacement from center of object
  a1 and a2 are angles in degrees
  dx, dy, width, height, and point values are expressed as integer multipliers
    where 128 means use the width or height from the type table


The following definitions for rect and oval are equivalent to the builtin
shapes of the same name.

setprop[rect shape [
  (frect 0 0  128 128)
  ]] **

setprop[oval shape [
  (farc 0 0  128 128)
  ]] **
*/

setprop[ hex2 shape [
%  (fpoly convex  -100 0  -50 100  50 100  100 0  50 -100  -50 -100)
  (fpoly convex  -50 -100  -50 100  50 100  100 0  50 -100  -50 -100)
  ]] **

setprop[octagon  shape [
  (fpoly convex  -112 -48   64 -64   96 0   64 64
      0 96   -64 64   -96 0   -64 -64 )
  ]] **

setprop[nupad  shape [
  (fpoly convex  -120 0  180 -120  0 240)
  (shadow 0)
  (defeacolor 4) (color -2)
  (fpoly convex  -90 0  135 -90  0 180)
  ]] **

setprop[nupad2  shape [
  (linewidth 5)
  (dlines   -100 0  160 -100  0 200  -160 -100)
  (shadow 0)
  (color -2)
  (fpoly convex  -90 0  135 -90  0 180)
  ]] **

setprop[ring shape [
  (shadow 0)
  (farc 0 0 250)
  (color 0)
  (farc 0 0 220)
  ]]

setprop[octy shape [
  (frect 0 0  150 100)
  (drect 0 0  100 150)
  ]] **

setprop[xlogo2 shape [
  (type xlogo 0 0)
  (drect 0 0  100 150)
  ]] **

setprop[octy2 shape [
  (color -2)
  (frect -64 -64  64 64)
  (color -3)
  (frect +64 -64  64 64)
  (color -4)
  (frect -64 +64  64 64)
  (color -5)
  (frect +64 +64  64 64)
  (shadow 0)
  (color -1)
  (frect 0 0  64 64)
  (ltext 130 0 0 'lText')
  (ctext 0 -64 0 'cText')
  (rtext -130 0 0 'rText')
  ]] **

/*
objecte foo2 2 2
objecte foo2 3 3
objecte foo2 4 1
objecte foo2 5 7

objecte foo2 2 1
objecte foo2 3 2
objecte foo2 4 3
objecte foo2 5 4

objecte foo3 2 2
objecte foo3 3 3             
objecte foo3 4 1
objecte foo3 5 7
*/

setprop[octy3 shape [
  (linewidth 8)
  (dlines  -192 -128  0 256  +192 -64  +192 +64  0 -256  -192 +64  -192 -64)
%  (fpoly nonconvex  -192 -128  0 256  +192 -64  +192 +64  0 -256  -192 +64)
  (color -2) (shadow 0) (linewidth 2) (darc 0 0 192 64)
  ]] **

setprop[tinman shape [
  (farc 0 0  128)
  (color 3)
  (dlines -64 64  +128 -128)
  (dlines -64 -64  +128 +128)
  ]] **

setprop[mdhost shape [
  (frect 0  256  128 128)
  (shadow 0)
  (farc 0 0  50 50)
  (dlines  0 0  0 256)
  (labelcenter 0 256)
  ]]  **

setprop[mdhost2 shape [
  (frect 256  256  128 128)
  (shadow 0)
  (farc 0 0  50 50)
  (dlines  0 0  256 256)
  (labelcenter 256 256)
  ]]  **

setprop[refpoint shape [
  (shadow 0)
  (darc 0 0 480)
  (linewidth 1)
  (color 2)
  (darc 0 0 140)
  (labelcenter 800 0)
  ]]  **

/*
setprop[refpoint shape [
  (shadow 0)
  (darc 0 0 96)
  (linewidth 1)
  (color 2)
  (darc 0 0 28)
  (labelcenter 160 0)
  ]]  **
*/



settypes ((

%Note: types 1,2,3,4,7,8,9,11,12,13,14,15,18,20,24 
  %are hardcoded in tdcom & tdedit
% name    #   shape w  h     jmapGif	menu  portmenu
  (c30    1   oval 18 18     		psn psnport)
  (nuhost   2   rect 17 17   		nuhost)
  (network  3   oval 6  13    		cloud)
  (gty    4   diamond 24 34  		nugateway)
  (cluster 7  cloud 80 42     		cluster)
  (nuport 8   oval 3 3       		nuport)
  (view   9   oval  40 12    		view)
  (label  10  label 0 0      		label)
  (trunk  11  line 4 0       		trunk)
  (hostline 12 line 3 0      		hostline)
  (line   13  line 2 0       		line)
  (serline 14  line 4 0      		serline)
  (colornode 15 rect 15 10   		)
  (clusline 18 line 4 0      		clusterline)
%  (host   20   rect 17 17  'host.gif'	host)
  (host   20   rect 17 17    	 	host)
  (snmp   24  diamond 14 22  		snmp snmpport)

%%% End of fixed constants-- use 0 for the # field following this

  (mhost   0   rect 7 7    	 	host)
  (network  0   oval 8  16     cloud)
  (vlan   0   vlan 2 64      lan)  % rect with vlan props
  (testline 0 line 3 0      hostline)

  (cluster2 0  oval 40 20   cluster)

  (cisco  0  diamond 26 36  snmp snmpport)
  (router 0  diamond 26 36  snmp snmpport)
  (cis    0  diamond 20 28  snmp snmpport)
  (bfly   0  diamond 24 34  bfly gtyport)
  (snmphost  0  rect 17 17 snmp snmpport)

  (noshow  0  rect 3 3)
  (xlogo  0  bitmap '../xbm/xlogo32.xbm' 0   'xlogo.gif'  snmp)
  (xlogo2 0  xlogo2 20 20   'xlogo.gif' )
  (smiley 0  bitmap '../xbm/smiley.xbm' 0    'smiley.gif' host  )
  (t10    0  btriangle 30 30  t10 snmpport )
  (ttri   0  ttriangle 30 30  )
  (rpad   0  rtriangle 30 30   pad)
  (lpad   0  ltriangle 30 30   pad)
  (nupad  0  nupad 30 30   nupad)
  (hex     0    hexagon   40 40     psn )  		  
  (hex2     0    hex2   40 40     host )  		  
  (penta   0    pentagon  28 28     host ) 	 	  
  (oct     0    octagon   24 24    'octogon.gif'  octy )  		  
  (vlan2   0   vlan 3 90      lan)  % rect with vlan props
  (vlan3   0   vlan 3 160     lan)  % rect with vlan props
  (vlan4   0   vlan 1 10     lan) 

  (hlan2   0   hlan 90 3      lan)  % horizontal lan
  (hlan4   0   hlan 10 1     lan) 

  (t300  0    hexagon 18 18   psn psnport)
  (c3    0     oval 16 16     psn psnport)
  (c300  0     oval 20 20     psn psnport)
  (c3xa  0     oval 16 16     psn psnport)
  (person  0     oval 5 8    )

  (cloud   0   oval 16 32     cloud)
%  (cloud2  0   cloud 80 56 'cloud.gif'    cloud)
  (cloud2  0   cloud 80 56     cloud)
%  (cloud3  0   cloud 24 44  'cloud.gif'   cloud3)
  (cloud3  0   cloud 24 44     cloud3)
  (ntdr    0   octagon 24 24 'octogon.gif' ntdr)

  (octy   0   octy  20 20  'octogon.gif' 22 octy)
  (octy2  0   octy2 30 20  octy)
  (octy3  0   octy3 20 20  'fcc88.gif' octy)
  (tinman 0   tinman 20 20  host)
  (mdhost 0   mdhost 14 14  mdhost)
  (snmpsdlc 0   mdhost2 14 14  snmpsdlc)
  (mdline 0   line 2 0    snmpsdlcline )
  (tring  0   ring 20 20  cloud)
  (ft3c   0   rect 20 20  'ft3c.gif')
  (fcc88   0   rect 20 20  'fcc88.gif')
  (ted   0   rect 20 20  'Ted.gif')
  (earth   0   rect 20 20  'earth.gif')
  (ozi   0   rect 20 20  'ozi.gif')
  (bbn   0   rect 20 20  'bbn5.gif')
  (tonycat 0 rect 20 20  'tonycat.gif')
  (tonycat2 0 pixmap '../xpm/tonycat2.xpm'  'tonycat2.gif'  host)
%  (tonycat2 0 rect 20 20  'tonycat2.gif')
  (refpoint 0   refpoint 4 4  refpoint)
%  (refpoint 0   refpoint 20 20  refpoint)
  (peak  0   rect 6 6  peak)

  (alpcluster 0  oval 40 20 alpcluster)
  (view2   0   oval  40 12    		)


))


setprop[host alttype xlogo]
setprop[snmp alttype oct]
setprop[snmphost alttype hex]
